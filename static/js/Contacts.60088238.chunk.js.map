{"version":3,"file":"static/js/Contacts.60088238.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/IconButton/IconButton.module.css?34f6","components/IconButton/IconButton.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","views/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"edit\":\"ContactForm_edit__pQ0uo ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"labelEdit\":\"ContactForm_labelEdit__x6dts ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"inputEdit\":\"ContactForm_inputEdit__oTXNa ContactForm_input__Bl93P\",\"btn\":\"ContactForm_btn__wll+u\"};","import { useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { useNavigate } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport {\n  useAddContactMutation,\n  useFetchContactsQuery,\n  useUpdateContactMutation,\n} from \"redux/contacts\";\nimport s from \"./ContactForm.module.css\";\nimport Button from \"components/Button\";\n\nfunction ContactForm({\n  type,\n  id,\n  initialName = \"\",\n  initialNumber = \"\",\n  setEdit,\n}) {\n  const [name, setName] = useState(initialName);\n  const [number, setNumber] = useState(initialNumber);\n  const navigate = useNavigate();\n  const { data } = useFetchContactsQuery();\n  const names = data?.map((contact) => contact.name);\n  const [addContact] = useAddContactMutation();\n  const [updateContact] = useUpdateContactMutation();\n  const handleInputChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        return;\n      case \"number\":\n        setNumber(value);\n        return;\n      default:\n        return;\n    }\n  };\n  const onAddContact = async (name, number) => {\n    if (names.includes(name)) {\n      toast.error(`${name} is already in contacts!`);\n      return;\n    }\n    const data = await addContact({ name, number }).unwrap();\n    if (data.id) {\n      toast.success(`${name} was added to contacts`);\n      navigate(\"/contacts\");\n    }\n    if (data.message)\n      toast.error(`Can't add ${name} to contacts, please try again`);\n  };\n  const onEditContact = async (name, number) => {\n    const data = await updateContact({ id, name, number }).unwrap();\n    if (data.id) {\n      toast.success(`${name} was successfully updated`);\n      navigate(\"/contacts\");\n    }\n    if (data.message) toast.error(`Can't update ${name}, please try again`);\n  };\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const name = e.target.name.value;\n    const number = e.target.number.value;\n    if (type === \"Add\") onAddContact(name, number);\n    if (type === \"Edit\") onEditContact(name, number);\n  };\n\n  return (\n    <form className={type === \"Add\" ? s.form : s.edit} onSubmit={handleSubmit}>\n      <label className={type === \"Add\" ? s.label : s.labelEdit}>\n        Name\n        <input\n          className={type === \"Add\" ? s.input : s.inputEdit}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          placeholder=\" \"\n          required\n          value={name}\n          onInput={handleInputChange}\n        />\n      </label>\n      <label className={type === \"Add\" ? s.label : s.labelEdit}>\n        Number\n        <input\n          className={type === \"Add\" ? s.input : s.inputEdit}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          placeholder=\" \"\n          required\n          value={number}\n          onInput={handleInputChange}\n        />\n      </label>\n      <span>\n        <button className={s.btn} type=\"submit\">\n          Save\n        </button>\n        {type === \"Edit\" && (\n          <Button text=\"Cancel\" onClick={() => setEdit(false)} />\n        )}\n      </span>\n    </form>\n  );\n}\nContactForm.propTypes = {\n  type: PropTypes.string.isRequired,\n  id: PropTypes.string,\n  initialName: PropTypes.string,\n  initialNumber: PropTypes.string,\n  setEdit: PropTypes.func,\n};\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\",\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import { useSelector, useDispatch } from \"react-redux\";\nimport { changeFilter, getFilter } from \"redux/filter\";\nimport s from \"./Filter.module.css\";\n\nfunction Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const handleChange = (e) => {\n    const value = e.target.value;\n    dispatch(changeFilter(value));\n  };\n\n  return (\n    <div className={s.filter}>\n      <label className={s.label}>\n        Find contacts by Name\n        <input\n          className={s.input}\n          type=\"text\"\n          placeholder=\" \"\n          value={filter}\n          onChange={handleChange}\n        />\n      </label>\n    </div>\n  );\n}\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"IconButton_btn__PoeXD\"};","import {\n  AiFillPlusCircle,\n  AiFillCloseCircle,\n  AiOutlineEdit,\n  AiFillCheckCircle,\n} from \"react-icons/ai\";\nimport PropTypes from \"prop-types\";\nimport s from \"./IconButton.module.css\";\n\nfunction IconButton({ type = \"button\", icon, onClick }) {\n  switch (icon) {\n    case \"add\":\n      return (\n        <button\n          type={type}\n          className={s.btn}\n          aria-label=\"add contact\"\n          onClick={onClick}\n        >\n          <AiFillPlusCircle\n            style={{ width: \"40\", height: \"40\", color: \"green\" }}\n          />\n        </button>\n      );\n    case \"del\":\n      return (\n        <button\n          type={type}\n          className={s.btn}\n          aria-label=\"delete contact\"\n          onClick={onClick}\n        >\n          <AiFillCloseCircle\n            style={{ width: \"30\", height: \"30\", color: \"red\" }}\n          />\n        </button>\n      );\n    case \"edit\":\n      return (\n        <button\n          type={type}\n          className={s.btn}\n          aria-label=\"edit contact\"\n          onClick={onClick}\n        >\n          <AiOutlineEdit style={{ width: \"30\", height: \"30\", color: \"gray\" }} />\n        </button>\n      );\n    case \"ok\":\n      return (\n        <button\n          type={type}\n          className={s.btn}\n          aria-label=\"edit contact\"\n          onClick={onClick}\n        >\n          <AiFillCheckCircle\n            style={{ width: \"30\", height: \"30\", color: \"green\" }}\n          />\n        </button>\n      );\n    default:\n      return <button type={type} aria-label=\"button\"></button>;\n  }\n}\n\nIconButton.propTypes = {\n  type: PropTypes.string,\n  icon: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nexport default IconButton;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactItem_item__gxreB\",\"name\":\"ContactItem_name__XjpNK\",\"number\":\"ContactItem_number__mfZ8x\",\"btns\":\"ContactItem_btns__vCBZ0\",\"btn\":\"ContactItem_btn__1h5dG\"};","import { useEffect, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport PropTypes from \"prop-types\";\nimport { useRemoveContactMutation } from \"redux/contacts\";\nimport ContactForm from \"components/ContactForm\";\nimport IconButton from \"components/IconButton\";\nimport s from \"./ContactItem.module.css\";\n\nfunction ContactItem({ name, number, id }) {\n  const [edit, setEdit] = useState(false);\n  const [removeContact, { isSuccess, isError }] = useRemoveContactMutation();\n  const onRemoveContact = () => {\n    removeContact(id);\n  };\n  useEffect(() => {\n    if (isSuccess) toast.info(`${name} was removed from contacts`);\n    if (isError)\n      toast.error(`Can't remove ${name} from contacts, please try again`);\n  }, [isSuccess, isError, name]);\n  if (edit)\n    return (\n      <li className={s.item}>\n        <ContactForm\n          type=\"Edit\"\n          setEdit={setEdit}\n          id={id}\n          initialName={name}\n          initialNumber={number}\n        />\n      </li>\n    );\n  if (!edit)\n    return (\n      <li className={s.item}>\n        <span className={s.name}>{name}</span>\n        <span className={s.number}>{number}</span>\n        <div className={s.btns}>\n          <IconButton icon=\"edit\" onClick={() => setEdit(true)} />\n          <IconButton icon=\"del\" onClick={onRemoveContact} />\n        </div>\n      </li>\n    );\n}\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\nexport default ContactItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\"};","import { Fragment } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useFetchContactsQuery } from \"redux/contacts\";\nimport { getFilter } from \"redux/filter\";\nimport { getIsLoggedIn } from \"redux/auth\";\nimport ContactItem from \"components/ContactItem\";\nimport Loader from \"components/Loader\";\nimport s from \"./ContactList.module.css\";\n\nfunction ContactList() {\n  const isLoggedIn = useSelector(getIsLoggedIn);\n  const { data, isFetching } = useFetchContactsQuery(null, {\n    skip: !isLoggedIn,\n  });\n  const filter = useSelector(getFilter)?.toLowerCase().trim();\n  const contacts = data?.filter(({ name }) =>\n    name.toLowerCase().includes(filter)\n  );\n  if (isFetching) return <Loader />;\n  return (\n    <Fragment>\n      <ul className={s.list}>\n        {contacts?.length > 0 &&\n          contacts.map(({ id, name, number }) => (\n            <ContactItem name={name} number={number} id={id} key={id} />\n          ))}\n      </ul>\n    </Fragment>\n  );\n}\nexport default ContactList;\n","import { Fragment } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Filter from \"components/Filter\";\nimport IconButton from \"components/IconButton/IconButton\";\nimport ContactList from \"components/ContactList\";\n\nfunction Contacts() {\n  const navigate = useNavigate();\n  const navigateToAdd = () => navigate(\"/add\");\n  return (\n    <Fragment>\n      <h2>Contacts</h2>\n      <IconButton icon=\"add\" onClick={navigateToAdd} />\n      <Filter />\n      <ContactList />\n    </Fragment>\n  );\n}\n\nexport default Contacts;\n"],"names":["type","id","initialName","initialNumber","setEdit","useState","name","setName","number","setNumber","navigate","useNavigate","data","useFetchContactsQuery","names","map","contact","useAddContactMutation","addContact","useUpdateContactMutation","updateContact","handleInputChange","e","target","value","onAddContact","includes","toast","unwrap","message","onEditContact","handleSubmit","preventDefault","className","s","onSubmit","pattern","title","placeholder","required","onInput","Button","text","onClick","filter","useSelector","getFilter","dispatch","useDispatch","onChange","changeFilter","icon","style","width","height","color","edit","useRemoveContactMutation","removeContact","isSuccess","isError","useEffect","ContactForm","isLoggedIn","getIsLoggedIn","skip","isFetching","toLowerCase","trim","contacts","Loader","Fragment","length"],"sourceRoot":""}